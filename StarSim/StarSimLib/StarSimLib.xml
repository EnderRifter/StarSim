<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StarSimLib</name>
    </assembly>
    <members>
        <member name="T:StarSimLib.Constants">
            <summary>
            Holds common constants and helper functions.
            </summary>
        </member>
        <member name="F:StarSimLib.Constants.AstronomicalUnit">
            <summary>
            Definition of an astronomical unit.
            </summary>
        </member>
        <member name="F:StarSimLib.Constants.BodyCount">
            <summary>
            The amount of bodies that are rendered by default.
            </summary>
        </member>
        <member name="F:StarSimLib.Constants.CentralBodyMass">
            <summary>
            The mass of the central body, if it is included.
            </summary>
        </member>
        <member name="F:StarSimLib.Constants.EulerRotationStep">
            <summary>
            The amount of degrees by which the view will be rotated in any given direction.
            </summary>
        </member>
        <member name="F:StarSimLib.Constants.FrameRate">
            <summary>
            The frame rate limit for the program.
            </summary>
        </member>
        <member name="F:StarSimLib.Constants.G">
            <summary>
            The gravitational constant (m^3 kg^-1 s^-2).
            </summary>
        </member>
        <member name="F:StarSimLib.Constants.MinimumTreeWidth">
            <summary>
            The minimum width of a tree. Subtrees are not created when if their width would be smaller than this value,
            to prevent widths of NaN as a result of division errors.
            </summary>
        </member>
        <member name="F:StarSimLib.Constants.SecondsPerTick">
            <summary>
            The number of seconds that each simulation tick represents.
            </summary>
        </member>
        <member name="F:StarSimLib.Constants.SimulationRate">
            <summary>
            The tick rate limit for the simulation.
            </summary>
        </member>
        <member name="F:StarSimLib.Constants.SofteningFactor">
            <summary>
            Softens the force between <see cref="T:StarSimLib.Data_Structures.Body"/>s to avoid infinities.
            </summary>
        </member>
        <member name="F:StarSimLib.Constants.SofteningFactor2">
            <summary>
            The square of the <see cref="F:StarSimLib.Constants.SofteningFactor"/>.
            </summary>
        </member>
        <member name="F:StarSimLib.Constants.SolarMass">
            <summary>
            The mass of the sun (1.98892e30f).
            </summary>
        </member>
        <member name="F:StarSimLib.Constants.StoredPreviousPositionCount">
            <summary>
            The number of previous positions that will be stored by a body
            </summary>
        </member>
        <member name="F:StarSimLib.Constants.TimeStep">
            <summary>
            The default time step for the simulation.
            </summary>
        </member>
        <member name="F:StarSimLib.Constants.TreeTheta">
            <summary>
            The tolerance of the mass grouping approximation in the simulation. A body is only accelerated when the
            ratio of the tree's width to the distance (from the tree's center of mass to the body) is less than this.
            </summary>
        </member>
        <member name="F:StarSimLib.Constants.UniverseSize">
            <summary>
            The maximum radius within which <see cref="T:StarSimLib.Data_Structures.Body"/>s will be placed.
            </summary>
        </member>
        <member name="F:StarSimLib.Constants.ZoomStep">
            <summary>
            The amount by which the zoom level will be increased or decreased.
            </summary>
        </member>
        <member name="F:StarSimLib.Constants.UniverseOctant">
            <summary>
            The <see cref="T:StarSimLib.Data_Structures.Octant"/> instance representing the rendered universe.
            </summary>
        </member>
        <member name="T:StarSimLib.Contexts.SimulatorContext">
            <summary>
            Represents the solar simulation database.
            </summary>
        </member>
        <member name="F:StarSimLib.Contexts.SimulatorContext.ConnectionString">
            <summary>
            The connection string used to access the simulator database.
            </summary>
        </member>
        <member name="M:StarSimLib.Contexts.SimulatorContext.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Contexts.SimulatorContext"/> class.
            </summary>
        </member>
        <member name="M:StarSimLib.Contexts.SimulatorContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Contexts.SimulatorContext"/> class.
            </summary>
            <param name="options">Any <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions"/> that should be set on this instance.</param>
        </member>
        <member name="P:StarSimLib.Contexts.SimulatorContext.Bodies">
            <summary>
            Holds the <see cref="T:StarSimLib.Models.Body"/> entities in the database. Also allows querying the database via LINQ.
            </summary>
        </member>
        <member name="P:StarSimLib.Contexts.SimulatorContext.BodyToSystemJoins">
            <summary>
            Holds the <see cref="T:StarSimLib.Models.BodyToSystemJoin"/> entities in the database. Also allows querying the database via LINQ.
            </summary>
        </member>
        <member name="P:StarSimLib.Contexts.SimulatorContext.PublishedSystems">
            <summary>
            Holds the <see cref="T:StarSimLib.Models.PublishedSystem"/> entities in the database. Also allows querying the database via LINQ.
            </summary>
        </member>
        <member name="P:StarSimLib.Contexts.SimulatorContext.Systems">
            <summary>
            Holds the <see cref="T:StarSimLib.Models.System"/> entities in the database. Also allows querying the database via LINQ.
            </summary>
        </member>
        <member name="P:StarSimLib.Contexts.SimulatorContext.Users">
            <summary>
            Holds the <see cref="T:StarSimLib.Models.User"/> entities in the database. Also allows querying the database via LINQ.
            </summary>
        </member>
        <member name="M:StarSimLib.Contexts.SimulatorContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <inheritdoc />
        </member>
        <member name="M:StarSimLib.Contexts.SimulatorContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:StarSimLib.Cryptography.CryptographyHelper">
            <summary>
            Provides helper methods for manipulating password salts and hashes.
            </summary>
        </member>
        <member name="F:StarSimLib.Cryptography.CryptographyHelper.cryptoServiceProvider">
            <summary>
            The cryptographically secure random number generator to use to generate cryptographically strong sequences
            of bytes.
            </summary>
        </member>
        <member name="F:StarSimLib.Cryptography.CryptographyHelper.HashIterations">
            <summary>
            The number of iterations used when deriving the password hash from the salted password.
            </summary>
        </member>
        <member name="F:StarSimLib.Cryptography.CryptographyHelper.HashLength">
            <summary>
            The number of bytes of hash to return
            </summary>
        </member>
        <member name="F:StarSimLib.Cryptography.CryptographyHelper.SaltByteCount">
            <summary>
            The number of bytes per password salt.
            </summary>
        </member>
        <member name="M:StarSimLib.Cryptography.CryptographyHelper.BytesToString(System.Byte[])">
            <summary>
            Returns the string representation of the given bytes.
            </summary>
            <param name="contents">The byte contents to convert.</param>
            <returns>The string that represents the given bytes.</returns>
        </member>
        <member name="M:StarSimLib.Cryptography.CryptographyHelper.GenerateHash(System.Byte[],System.Byte[],System.Int32,System.Int32)">
            <summary>
            Returns the hash of the given salted password (password with salt prepended) with the given number of iterations.
            </summary>
            <param name="password">The password to hash.</param>
            <param name="salt">The salt to prepend to the password.</param>
            <param name="hashLength">The number of bytes of hash to return.</param>
            <param name="iterations">The number of iterations of hashing algorithm to perform.</param>
            <returns>The given number of bytes of hashed salted password.</returns>
        </member>
        <member name="M:StarSimLib.Cryptography.CryptographyHelper.GenerateSalt(System.Int32)">
            <summary>
            Returns a cryptographically strong sequence of bytes of the given length to function as a password salt.
            </summary>
            <param name="length">The number of bytes that should make up the salt.</param>
            <returns>The generated salt.</returns>
        </member>
        <member name="M:StarSimLib.Cryptography.CryptographyHelper.HashesEqual(System.Byte[],System.Byte[])">
            <summary>
            Determines whether the two hashes given are equal.
            </summary>
            <param name="a">The first hash to compare.</param>
            <param name="b">The second hash to compare.</param>
            <returns>Whether the two hashes are equal.</returns>
        </member>
        <member name="M:StarSimLib.Cryptography.CryptographyHelper.StringToBytes(System.String)">
            <summary>
            Returns the bytes of the given string.
            </summary>
            <param name="contents">The string contents to convert.</param>
            <returns>The bytes that make up the given string.</returns>
        </member>
        <member name="T:StarSimLib.Data_Structures.Body">
            <summary>
            Represents a stellar body.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Body.orbitTracer">
            <summary>
            The orbit tracers for this instance.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Body.force">
            <summary>
            The backing field for the <see cref="P:StarSimLib.Data_Structures.Body.Force"/> property.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Body.mass">
            <summary>
            Backing field for the <see cref="P:StarSimLib.Data_Structures.Body.Mass"/> property.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Body.position">
            <summary>
            Backing field for the <see cref="P:StarSimLib.Data_Structures.Body.Position"/> property.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Body.velocity">
            <summary>
            Backing field for the <see cref="P:StarSimLib.Data_Structures.Body.Velocity"/> property.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Body.Generation">
            <summary>
            The generation that this body belongs to.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Body.Id">
            <summary>
            The unique id for this body.
            </summary>
        </member>
        <member name="M:StarSimLib.Data_Structures.Body.#ctor(StarSimLib.Data_Structures.Vector4,StarSimLib.Data_Structures.Vector4,System.Double,System.UInt32,System.UInt32)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Data_Structures.Body"/> class.
            </summary>
            <param name="position">The starting position of the <see cref="T:StarSimLib.Data_Structures.Body"/>.</param>
            <param name="velocity">The starting velocity of the <see cref="T:StarSimLib.Data_Structures.Body"/>.</param>
            <param name="mass">The starting mass of the <see cref="T:StarSimLib.Data_Structures.Body"/>.</param>
            <param name="generation">The generation that this <see cref="T:StarSimLib.Data_Structures.Body"/> belongs to.</param>
            <param name="id">The unique id for this body.</param>
        </member>
        <member name="P:StarSimLib.Data_Structures.Body.Force">
            <summary>
            The current force on the <see cref="T:StarSimLib.Data_Structures.Body"/> in 3D space.
            </summary>
        </member>
        <member name="P:StarSimLib.Data_Structures.Body.Mass">
            <summary>
            The mass of the <see cref="T:StarSimLib.Data_Structures.Body"/>.
            </summary>
        </member>
        <member name="P:StarSimLib.Data_Structures.Body.OrbitTracer">
            <summary>
            The <see cref="T:StarSimLib.Data_Structures.OrbitTracer"/> for this instance.
            </summary>
        </member>
        <member name="P:StarSimLib.Data_Structures.Body.Position">
            <summary>
            The current position of the <see cref="T:StarSimLib.Data_Structures.Body"/> in 3D space.
            </summary>
        </member>
        <member name="P:StarSimLib.Data_Structures.Body.RecordPreviousPositions">
            <summary>
            Whether to record previous positions of this instance, to render an orbit tracer behind it.
            </summary>
        </member>
        <member name="P:StarSimLib.Data_Structures.Body.Velocity">
            <summary>
            The current velocity of the <see cref="T:StarSimLib.Data_Structures.Body"/> in 3D space.
            </summary>
        </member>
        <member name="M:StarSimLib.Data_Structures.Body.GetForceBetween(StarSimLib.Data_Structures.Body,StarSimLib.Data_Structures.Body)">
            <summary>
            Computes the force vector for the gravitational attraction between <see cref="T:StarSimLib.Data_Structures.Body"/> A and <see cref="T:StarSimLib.Data_Structures.Body"/> B.
            </summary>
            <param name="a">The first <see cref="T:StarSimLib.Data_Structures.Body"/> instance.</param>
            <param name="b">The second <see cref="T:StarSimLib.Data_Structures.Body"/> instance.</param>
            <returns>The computed force vector for the gravitational attraction.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Body.GetForceBetween(StarSimLib.Data_Structures.Body,StarSimLib.Data_Structures.Vector4,System.Double)">
            <summary>
            Computes the force vector for the gravitational attraction between the <see cref="T:StarSimLib.Data_Structures.Body"/> A and the mass at
            the given position.
            </summary>
            <param name="a">The <see cref="T:StarSimLib.Data_Structures.Body"/> instance.</param>
            <param name="positionB">The position at which the given mass can be thought of as acting.</param>
            <param name="massB">The mass for which to compute the gravitational attraction.</param>
            <returns>The computed force vector for the gravitational attraction.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Body.AddForce(StarSimLib.Data_Structures.Body)">
            <summary>
            Calculates the force between this instance and the given other body, and adds the resultant vector to the
            internal total force vector.
            </summary>
            <param name="otherBody">The other body to calculate the force between.</param>
        </member>
        <member name="M:StarSimLib.Data_Structures.Body.AddForce(StarSimLib.Data_Structures.Vector4)">
            <summary>
            Updates the current force vector for this instance, by adding the given vector to it.
            </summary>
            <param name="forceVector">The force vector to add to this instances internal force vector.</param>
        </member>
        <member name="M:StarSimLib.Data_Structures.Body.Collide(StarSimLib.Data_Structures.Body)">
            <summary>
            Collides this instance with the given <see cref="T:StarSimLib.Data_Structures.Body"/> instance.
            </summary>
            <param name="otherBody">The other instance with which to collide.</param>
        </member>
        <member name="M:StarSimLib.Data_Structures.Body.DistanceTo(StarSimLib.Data_Structures.Body,StarSimLib.Data_Structures.Vector4@)">
            <summary>
            Finds and returns the distance between the current <see cref="T:StarSimLib.Data_Structures.Body"/> instance and the given <see cref="T:StarSimLib.Data_Structures.Body"/>.
            In other words, it finds the magnitude of the translation vector between the two <see cref="T:StarSimLib.Data_Structures.Body"/> instances.
            </summary>
            <param name="body">The other <see cref="T:StarSimLib.Data_Structures.Body"/> instance to which to calculate the distance.</param>
            <param name="displacement">The vector showing the displacement of the current body from the given one.</param>
            <returns>The distance to the other <see cref="T:StarSimLib.Data_Structures.Body"/> as a <see cref="T:System.Single"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Body.IsInOctant(StarSimLib.Data_Structures.Octant)">
            <summary>
            Whether this instance is currently inside the bounds of the given <see cref="T:StarSimLib.Data_Structures.Octant"/> instance.
            </summary>
            <param name="octant">The octant to check.</param>
            <returns>Whether this <see cref="T:StarSimLib.Data_Structures.Body"/> instance is inside the given <see cref="T:StarSimLib.Data_Structures.Octant"/> instance.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Body.ResetForce">
            <summary>
            Resets the internal force vector.
            </summary>
        </member>
        <member name="M:StarSimLib.Data_Structures.Body.ToString">
            <inheritdoc />
        </member>
        <member name="M:StarSimLib.Data_Structures.Body.Update(System.Double)">
            <summary>
            Updates the <see cref="P:StarSimLib.Data_Structures.Body.Position"/> of the current body using the internal force vector and the given time step.
            </summary>
            <param name="deltaTime">The time step.</param>
        </member>
        <member name="M:StarSimLib.Data_Structures.Body.Update(StarSimLib.Data_Structures.Vector4,System.Double)">
            <summary>
            Updates the <see cref="P:StarSimLib.Data_Structures.Body.Position"/> of the current body using the given force vector and time step.
            </summary>
            <param name="forceVector">The sum vector of all forces due to other <see cref="T:StarSimLib.Data_Structures.Body"/>s.</param>
            <param name="deltaTime">The time step.</param>
        </member>
        <member name="T:StarSimLib.Data_Structures.EulerAngle">
            <summary>
            Represents a set of 3 angles, that together describe a 3D rotation.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.EulerAngle.X">
            <summary>
            Angle of rotation in the x axis.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.EulerAngle.Y">
            <summary>
            Angle of rotation in the y axis.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.EulerAngle.Z">
            <summary>
            Angle of rotation in the z axis.
            </summary>
        </member>
        <member name="M:StarSimLib.Data_Structures.EulerAngle.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Data_Structures.EulerAngle"/> struct.
            </summary>
            <param name="x">The angle of rotation in the x axis.</param>
            <param name="y">The angle of rotation in the y axis.</param>
            <param name="z">The angle of rotation in the z axis.</param>
        </member>
        <member name="T:StarSimLib.Data_Structures.Matrix4x4">
            <summary>
            A 4-by-4 matrix of <see cref="T:System.Double"/> values.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Matrix4x4.matrix">
            <summary>
            The internal matrix representation.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Matrix4x4.CopyMatrixValuesGeneratorDelegate">
            <summary>
            The default <see cref="T:StarSimLib.Data_Structures.Matrix4x4.MatrixValueGeneratorDelegate"/> to use when constructing a <see cref="T:StarSimLib.Data_Structures.Matrix4x4"/>
            from a given 2D <see cref="T:System.Double"/> array. Simply copies over the values from the source matrix to the
            output matrix. Should the source matrix contain null fields, a 0 will be placed at the relevant field in
            the target matrix.
            </summary>
        </member>
        <member name="M:StarSimLib.Data_Structures.Matrix4x4.#ctor(System.Double)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Data_Structures.Matrix4x4"/> struct.
            </summary>
            <param name="defaultValue">The value to which to initialise all fields in the matrix.</param>
        </member>
        <member name="M:StarSimLib.Data_Structures.Matrix4x4.#ctor(System.Double[][])">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Data_Structures.Matrix4x4"/> struct.
            </summary>
            <param name="sourceMatrix">The source matrix from which to copy over values.</param>
        </member>
        <member name="M:StarSimLib.Data_Structures.Matrix4x4.#ctor(StarSimLib.Data_Structures.Matrix4x4)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Data_Structures.Matrix4x4"/> struct.
            </summary>
            <param name="sourceMatrix">The source matrix from which to copy over values.</param>
        </member>
        <member name="M:StarSimLib.Data_Structures.Matrix4x4.#ctor(System.Double[][],StarSimLib.Data_Structures.Matrix4x4.MatrixValueGeneratorDelegate)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Data_Structures.Matrix4x4"/> struct.
            </summary>
            <param name="sourceMatrix">The source matrix.</param>
            <param name="valueGenerator">
            The <see cref="T:StarSimLib.Data_Structures.Matrix4x4.MatrixValueGeneratorDelegate"/> to use to generate new matrix values. Can use the source matrix
            or can ignore it.
            </param>
        </member>
        <member name="M:StarSimLib.Data_Structures.Matrix4x4.#ctor(StarSimLib.Data_Structures.Matrix4x4,StarSimLib.Data_Structures.Matrix4x4.MatrixValueGeneratorDelegate)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Data_Structures.Matrix4x4"/> struct.
            </summary>
            <param name="sourceMatrix">The source matrix.</param>
            <param name="valueGenerator">
            The <see cref="T:StarSimLib.Data_Structures.Matrix4x4.MatrixValueGeneratorDelegate"/> to use to generate new matrix values. Can use the source matrix
            or can ignore it.
            </param>
        </member>
        <member name="T:StarSimLib.Data_Structures.Matrix4x4.MatrixValueGeneratorDelegate">
            <summary>
            Generates a value to place in the target matrix (at [i, j]), using a source matrix and i and j coordinates.
            </summary>
            <param name="sourceMatrix">The source matrix to use.</param>
            <param name="i">The column index.</param>
            <param name="j">The row index</param>
            <returns>The value to place at the (i, j) position in the new matrix.</returns>
        </member>
        <member name="P:StarSimLib.Data_Structures.Matrix4x4.Item(System.Int32,System.Int32)">
            <summary>
            Indexes the matrix as a 2D array.
            </summary>
            <param name="i">The column index.</param>
            <param name="j">The row index.</param>
            <returns>The value at the specified field.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Matrix4x4.op_Implicit(StarSimLib.Data_Structures.Matrix4x4)~System.Double[][]">
            <summary>
            Implicitly converts a <see cref="T:StarSimLib.Data_Structures.Matrix4x4"/> to a 2D <see cref="T:System.Double"/> array.
            </summary>
            <param name="matrix4x4">The matrix to convert.</param>
        </member>
        <member name="M:StarSimLib.Data_Structures.Matrix4x4.op_Multiply(StarSimLib.Data_Structures.Matrix4x4,StarSimLib.Data_Structures.Vector4)">
            <summary>
            Implements the multiplication operator for a <see cref="T:StarSimLib.Data_Structures.Matrix4x4"/> and a <see cref="T:StarSimLib.Data_Structures.Vector4"/>. This is
            the 'dot' operation for a vector and a matrix.
            </summary>
            <param name="matrix4x4">The matrix.</param>
            <param name="vector">The 3D vector.</param>
            <returns>The dot product of the <see cref="T:StarSimLib.Data_Structures.Matrix4x4"/> and the <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Matrix4x4.op_Multiply(StarSimLib.Data_Structures.Vector4,StarSimLib.Data_Structures.Matrix4x4)">
            <summary>
            Implements the multiplication operator for a <see cref="T:StarSimLib.Data_Structures.Matrix4x4"/> and a <see cref="T:StarSimLib.Data_Structures.Vector4"/>. This is
            the 'dot' operation for a vector and a matrix.
            </summary>
            <param name="vector">The 3D vector.</param>
            <param name="matrix4x4">The matrix.</param>
            <returns>The dot product of the <see cref="T:StarSimLib.Data_Structures.Matrix4x4"/> and the <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Matrix4x4.ToString">
            <inheritdoc />
        </member>
        <member name="T:StarSimLib.Data_Structures.PositionSpecifier">
            <summary>
            Enumerates the possible sub-octants positions.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.PositionSpecifier.TopNorthWest">
            <summary>
            The child octant in the top layer, north west corner.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.PositionSpecifier.TopNorthEast">
            <summary>
            The child octant in the top layer, north east corner.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.PositionSpecifier.TopSouthEast">
            <summary>
            The child octant in the top layer, south east corner.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.PositionSpecifier.TopSouthWest">
            <summary>
            The child octant in the top layer, south west corner.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.PositionSpecifier.BottomNorthWest">
            <summary>
            The child octant in the bottom layer, north west corner.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.PositionSpecifier.BottomNorthEast">
            <summary>
            The child octant in the bottom layer, north east corner.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.PositionSpecifier.BottomSouthEast">
            <summary>
            The child octant in the bottom layer, south east corner.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.PositionSpecifier.BottomSouthWest">
            <summary>
            The child octant in the bottom layer, south west corner.
            </summary>
        </member>
        <member name="T:StarSimLib.Data_Structures.Octant">
            <summary>
            Represents an octant of 3D space.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Octant.halfSideLength">
            <summary>
            The length of a half of 1 side of this instance, used to provide the side length of child instances.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Octant.midpoint">
            <summary>
            The centre of this instance.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Octant.quarterSideLength">
            <summary>
            The length of a quarter of 1 side of this instance, used to provide the midpoint of child instances.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Octant.sideLength">
            <summary>
            The length of 1 side of this instance.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Octant.childOctants">
            <summary>
            The child octant instances of this instance.
            </summary>
        </member>
        <member name="M:StarSimLib.Data_Structures.Octant.#ctor(StarSimLib.Data_Structures.Vector4,System.Double)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Data_Structures.Octant"/> class.
            </summary>
            <param name="midpoint">The central midpoint of this instance.</param>
            <param name="length">The length of 1 complete side of this instance.</param>
        </member>
        <member name="M:StarSimLib.Data_Structures.Octant.#ctor(StarSimLib.Data_Structures.Octant)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Data_Structures.Octant"/> class.
            </summary>
            <param name="octant">The previous instance to make a copy of.</param>
        </member>
        <member name="P:StarSimLib.Data_Structures.Octant.Length">
            <summary>
            The length of 1 complete side of this instance.
            </summary>
        </member>
        <member name="P:StarSimLib.Data_Structures.Octant.Midpoint">
            <summary>
            The central point for this instance.
            </summary>
        </member>
        <member name="P:StarSimLib.Data_Structures.Octant.Item(StarSimLib.Data_Structures.PositionSpecifier)">
            <summary>
            Indexes this instance, shorthand for <see cref="M:StarSimLib.Data_Structures.Octant.SubOctant(StarSimLib.Data_Structures.PositionSpecifier)"/>.
            </summary>
            <param name="specifier">Which child octant instance to return.</param>
            <returns>The specified child octant instance.</returns>
        </member>
        <member name="P:StarSimLib.Data_Structures.Octant.Item(System.Int32)">
            <summary>
            Indexes this instance, shorthand for <see cref="M:StarSimLib.Data_Structures.Octant.SubOctant(StarSimLib.Data_Structures.PositionSpecifier)"/>.
            </summary>
            <param name="specifier">Which child octant instance to return.</param>
            <returns>The specified child octant instance.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Octant.GetOrSetChildOctant(StarSimLib.Data_Structures.Octant[]@,System.Int32,StarSimLib.Data_Structures.Vector4,System.Double)">
            <summary>
            Returns the specified child octant instance, or instantiates a new octant if the specified child instance
            is <c>null</c>. The newly constructed instance will then be returned.
            </summary>
            <param name="octants">
            A reference to the <see cref="T:StarSimLib.Data_Structures.Octant"/> array from which to get the specified instance.
            </param>
            <param name="index">The index in the array whose held instance to get or set.</param>
            <param name="newMidpoint">The midpoint of the new child instance, if necessary.</param>
            <param name="newSideLength">The side length of the new child instance, if necessary.</param>
            <returns>The instance held at the specified index, or the newly created instance.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Octant.ContainsPoint(StarSimLib.Data_Structures.Vector4)">
            <summary>
            Whether the given point is within the bounds of this instance.
            </summary>
            <param name="point">
            The point whose position to check. Only the first 3 dimensions are used, the 4th is ignored.
            </param>
            <returns>Whether the given point is within the bounds of this instance.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Octant.SubOctant(System.Int32)">
            <summary>
            Returns the specified child octant instance.
            </summary>
            <param name="specifier">Which child octant instance to return.</param>
            <returns>The specified child octant instance.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when the given specifier does not equate to one of the values in the <see cref="T:StarSimLib.Data_Structures.PositionSpecifier"/> enum.
            </exception>
        </member>
        <member name="M:StarSimLib.Data_Structures.Octant.SubOctant(StarSimLib.Data_Structures.PositionSpecifier)">
            <summary>
            Returns the specified child octant instance.
            </summary>
            <param name="specifier">Which child octant instance to return.</param>
            <returns>The specified child octant instance.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when the given specifier does not equate to one of the values in the <see cref="T:StarSimLib.Data_Structures.PositionSpecifier"/> enum.
            </exception>
        </member>
        <member name="M:StarSimLib.Data_Structures.Octant.ToString">
            <inheritdoc />
        </member>
        <member name="T:StarSimLib.Data_Structures.OctantTree">
            <summary>
            A tree of <see cref="T:StarSimLib.Data_Structures.Octant"/> instances, where each node has 8 children.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.OctantTree.octant">
            <summary>
            The <see cref="T:StarSimLib.Data_Structures.Octant"/> of space managed by this instance.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.OctantTree.aggregateMass">
            <summary>
            The aggregate mass of all the bodies held in this instance.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.OctantTree.body">
            <summary>
            The <see cref="T:StarSimLib.Data_Structures.Body"/> instance that is held in this instance, be it real or an aggregate.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.OctantTree.centreOfAggregateMass">
            <summary>
            The point at which all the mass seems to be concentrated.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.OctantTree.childTrees">
            <summary>
            The child octant tree instances of this instance.
            </summary>
        </member>
        <member name="M:StarSimLib.Data_Structures.OctantTree.#ctor(StarSimLib.Data_Structures.Octant)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Data_Structures.OctantTree"/> class.
            </summary>
            <param name="octant">The <see cref="T:StarSimLib.Data_Structures.Octant"/> instance representing the space managed by this instance.</param>
        </member>
        <member name="P:StarSimLib.Data_Structures.OctantTree.Item(StarSimLib.Data_Structures.PositionSpecifier)">
            <summary>
            Indexes this instance, shorthand for <see cref="M:StarSimLib.Data_Structures.OctantTree.SubTree(StarSimLib.Data_Structures.PositionSpecifier)"/>.
            </summary>
            <param name="specifier">Which child octant tree instance to return.</param>
            <returns>The specified child octant tree instance.</returns>
        </member>
        <member name="P:StarSimLib.Data_Structures.OctantTree.Item(System.Int32)">
            <summary>
            Indexes this instance, shorthand for <see cref="M:StarSimLib.Data_Structures.OctantTree.SubTree(StarSimLib.Data_Structures.PositionSpecifier)"/>.
            </summary>
            <param name="specifier">Which child octant tree instance to return.</param>
            <returns>The specified child octant tree instance.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.OctantTree.AddToChildTree(StarSimLib.Data_Structures.Body)">
            <summary>
            Adds the given body to one of the child trees of this instance.
            </summary>
            <param name="newBody">The body to add.</param>
        </member>
        <member name="M:StarSimLib.Data_Structures.OctantTree.GetOrSetSubTree(StarSimLib.Data_Structures.OctantTree[]@,System.Int32,StarSimLib.Data_Structures.Octant)">
            <summary>
            Returns the specified child octant tree instance, or instantiates a new octant tree if the specified child
            instance is <c>null</c>. The newly constructed instance will then be returned.
            </summary>
            <param name="trees">
            A reference to the <see cref="T:StarSimLib.Data_Structures.OctantTree"/> array from which to get the specified instance.
            </param>
            <param name="index">The index in the array whose held instance to get or set.</param>
            <param name="newOctant">
            The octant instance representing the space managed by the new child tree instance, if necessary.
            </param>
            <returns>The instance held at the specified index, or the newly created instance.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.OctantTree.AddBody(StarSimLib.Data_Structures.Body)">
            <summary>
            Adds the given <see cref="T:StarSimLib.Data_Structures.Body"/> instance to this tree instance or a child tree instance.
            </summary>
            <param name="newBody">The <see cref="T:StarSimLib.Data_Structures.Body"/> instance to add.</param>
        </member>
        <member name="M:StarSimLib.Data_Structures.OctantTree.IsExternal">
            <summary>
            Whether this instance does not have any child instances and is thus an 'external' octant tree, or not.
            </summary>
            <returns>Whether this instance has no non-null child instance.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.OctantTree.SubTree(System.Int32)">
            <summary>
            Returns the specified child octant tree instance.
            </summary>
            <param name="specifier">Which child octant tree instance to return.</param>
            <returns>The specified child octant tree instance.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when the given specifier does not equate to one of the values in the <see cref="T:StarSimLib.Data_Structures.PositionSpecifier"/> enum.
            </exception>
        </member>
        <member name="M:StarSimLib.Data_Structures.OctantTree.SubTree(StarSimLib.Data_Structures.PositionSpecifier)">
            <summary>
            Returns the specified child octant tree instance.
            </summary>
            <param name="specifier">Which child octant tree instance to return.</param>
            <returns>The specified child octant tree instance.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when the given specifier does not equate to one of the values in the <see cref="T:StarSimLib.Data_Structures.PositionSpecifier"/> enum.
            </exception>
        </member>
        <member name="M:StarSimLib.Data_Structures.OctantTree.UpdateForces(StarSimLib.Data_Structures.Body)">
            <summary>
            Recursively updates the forces on each <see cref="T:StarSimLib.Data_Structures.Body"/> instance held in this tree, with respect to the
            given reference <see cref="T:StarSimLib.Data_Structures.Body"/> instance.
            </summary>
            <param name="referenceBody">The body instance against which force updates are made.</param>
        </member>
        <member name="M:StarSimLib.Data_Structures.OctantTree.ToString">
            <inheritdoc />
        </member>
        <member name="T:StarSimLib.Data_Structures.OrbitTracer">
            <summary>
            Represents a series of points denoting the previous positions of a <see cref="T:StarSimLib.Data_Structures.Body"/> instance. Used to render
            an orbit tracer behind the <see cref="T:StarSimLib.Data_Structures.Body"/>.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.OrbitTracer.PositionSampleRate">
            <summary>
            Sample rate for the previous position. Used to improve performance and get a longer orbit tracer tail
            for less computation. The previous position will be saved once every 10 sampling opportunities.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.OrbitTracer.previousPositions">
            <summary>
            Backing field for the <see cref="P:StarSimLib.Data_Structures.OrbitTracer.PreviousPositions"/> property.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.OrbitTracer.positionSampleCounter">
            <summary>
            Counts the number of sampling opportunities that have gone by since the last position sample. Resets once
            it reaches the value of <see cref="F:StarSimLib.Data_Structures.OrbitTracer.PositionSampleRate"/>.
            </summary>
        </member>
        <member name="M:StarSimLib.Data_Structures.OrbitTracer.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Data_Structures.OrbitTracer"/> class.
            </summary>
        </member>
        <member name="P:StarSimLib.Data_Structures.OrbitTracer.PreviousPositions">
            <summary>
            An <see cref="T:System.Collections.Generic.Queue`1"/> containing previous <see cref="T:StarSimLib.Data_Structures.Vector4"/> positions of the body.
            </summary>
        </member>
        <member name="M:StarSimLib.Data_Structures.OrbitTracer.Clear">
            <summary>
            Clears the <see cref="T:System.Collections.Generic.Queue`1"/> holding the previous positions.
            </summary>
        </member>
        <member name="M:StarSimLib.Data_Structures.OrbitTracer.Enqueue(StarSimLib.Data_Structures.Vector4)">
            <summary>
            Enqueues the current position on the <see cref="F:StarSimLib.Data_Structures.OrbitTracer.previousPositions"/> queue, to save it.
            Will dequeue positions from the queue if the number of stored positions exceeds the
            value in <see cref="F:StarSimLib.Constants.StoredPreviousPositionCount"/>. Will only enqueue the
            current position if the <see cref="F:StarSimLib.Data_Structures.OrbitTracer.PositionSampleRate"/> is met.
            </summary>
        </member>
        <member name="T:StarSimLib.Data_Structures.Vector4">
            <summary>
            A 4D vector with <see cref="T:System.Double"/> components.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Vector4.W">
            <summary>
            The w component of the vector.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Vector4.X">
            <summary>
            The x component of the vector.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Vector4.Y">
            <summary>
            The y component of the vector.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Vector4.Z">
            <summary>
            The z component of the vector.
            </summary>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.#ctor(System.Double,System.Double)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Data_Structures.Vector4"/> struct. Sets Z and W to 0.
            </summary>
            <param name="x">The x component.</param>
            <param name="y">The y component.</param>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Data_Structures.Vector4"/> struct. Sets W to 0.
            </summary>
            <param name="x">The x component.</param>
            <param name="y">The y component.</param>
            <param name="z">The z component.</param>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Data_Structures.Vector4"/> struct.
            </summary>
            <param name="x">The x component.</param>
            <param name="y">The y component.</param>
            <param name="z">The z component.</param>
            <param name="w">The w component.</param>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Subtraction(StarSimLib.Data_Structures.Vector4,StarSimLib.Data_Structures.Vector4)">
            <summary>
            Implements the subtraction operator for 2 <see cref="T:StarSimLib.Data_Structures.Vector4"/>s.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="vector2">The other <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Subtraction(StarSimLib.Data_Structures.Vector4,System.ValueTuple{System.Double,System.Double,System.Double,System.Double})">
            <summary>
            Implements the subtraction operator for a <see cref="T:StarSimLib.Data_Structures.Vector4"/> and a (X, Y, Z, W) tuple.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="vector2">The 4D tuple.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Subtraction(System.ValueTuple{System.Double,System.Double,System.Double,System.Double},StarSimLib.Data_Structures.Vector4)">
            <summary>
            Implements the subtraction operator for a <see cref="T:StarSimLib.Data_Structures.Vector4"/> and a (X, Y, Z, W) tuple.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="vector2">The 4D tuple.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Subtraction(StarSimLib.Data_Structures.Vector4,System.Double)">
            <summary>
            Implements the subtraction operator for a <see cref="T:StarSimLib.Data_Structures.Vector4"/> and a scalar <see cref="T:System.Double"/> value.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="scalar">The scalar <see cref="T:System.Double"/>.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Subtraction(System.Double,StarSimLib.Data_Structures.Vector4)">
            <summary>
            Implements the subtraction operator for a <see cref="T:StarSimLib.Data_Structures.Vector4"/> and a scalar <see cref="T:System.Double"/> value.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="scalar">The scalar <see cref="T:System.Double"/>.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Multiply(StarSimLib.Data_Structures.Vector4,StarSimLib.Data_Structures.Vector4)">
            <summary>
            Implements the multiplication operator for 2 <see cref="T:StarSimLib.Data_Structures.Vector4"/>s.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="vector2">The other <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Multiply(StarSimLib.Data_Structures.Vector4,System.ValueTuple{System.Double,System.Double,System.Double,System.Double})">
            <summary>
            Implements the multiplication operator for a <see cref="T:StarSimLib.Data_Structures.Vector4"/> and a (X, Y, Z, W) tuple.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="vector2">The 4D tuple.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Multiply(System.ValueTuple{System.Double,System.Double,System.Double,System.Double},StarSimLib.Data_Structures.Vector4)">
            <summary>
            Implements the multiplication operator for a <see cref="T:StarSimLib.Data_Structures.Vector4"/> and a (X, Y, Z, W) tuple.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="vector2">The 4D tuple.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Multiply(StarSimLib.Data_Structures.Vector4,System.Double)">
            <summary>
            Implements the multiplication operator for a <see cref="T:StarSimLib.Data_Structures.Vector4"/> and a scalar <see cref="T:System.Double"/> value.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="scalar">The scalar <see cref="T:System.Double"/>.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Multiply(System.Double,StarSimLib.Data_Structures.Vector4)">
            <summary>
            Implements the multiplication operator for a <see cref="T:StarSimLib.Data_Structures.Vector4"/> and a scalar <see cref="T:System.Double"/> value.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="scalar">The scalar <see cref="T:System.Double"/>.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Division(StarSimLib.Data_Structures.Vector4,StarSimLib.Data_Structures.Vector4)">
            <summary>
            Implements the division operator for 2 <see cref="T:StarSimLib.Data_Structures.Vector4"/>s.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="vector2">The other <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Division(StarSimLib.Data_Structures.Vector4,System.ValueTuple{System.Double,System.Double,System.Double,System.Double})">
            <summary>
            Implements the division operator for a <see cref="T:StarSimLib.Data_Structures.Vector4"/> and a (X, Y, Z, W) tuple.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="vector2">The 4D tuple.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Division(System.ValueTuple{System.Double,System.Double,System.Double,System.Double},StarSimLib.Data_Structures.Vector4)">
            <summary>
            Implements the division operator for a <see cref="T:StarSimLib.Data_Structures.Vector4"/> and a (X, Y, Z, W) tuple.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="vector2">The 4D tuple.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Division(StarSimLib.Data_Structures.Vector4,System.Double)">
            <summary>
            Implements the division operator for a <see cref="T:StarSimLib.Data_Structures.Vector4"/> and a scalar <see cref="T:System.Double"/> value.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="scalar">The scalar <see cref="T:System.Double"/>.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Division(System.Double,StarSimLib.Data_Structures.Vector4)">
            <summary>
            Implements the division operator for a <see cref="T:StarSimLib.Data_Structures.Vector4"/> and a scalar <see cref="T:System.Double"/> value.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="scalar">The scalar <see cref="T:System.Double"/>.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Addition(StarSimLib.Data_Structures.Vector4,StarSimLib.Data_Structures.Vector4)">
            <summary>
            Implements the addition operator for 2 <see cref="T:StarSimLib.Data_Structures.Vector4"/>s.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="vector2">The other <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Addition(StarSimLib.Data_Structures.Vector4,System.ValueTuple{System.Double,System.Double,System.Double,System.Double})">
            <summary>
            Implements the addition operator for a <see cref="T:StarSimLib.Data_Structures.Vector4"/> and a (X, Y, Z, W) tuple.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="vector2">The 4D tuple.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Addition(System.ValueTuple{System.Double,System.Double,System.Double,System.Double},StarSimLib.Data_Structures.Vector4)">
            <summary>
            Implements the addition operator for a <see cref="T:StarSimLib.Data_Structures.Vector4"/> and a (X, Y, Z, W) tuple.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="vector2">The 4D tuple.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Addition(StarSimLib.Data_Structures.Vector4,System.Double)">
            <summary>
            Implements the addition operator for a <see cref="T:StarSimLib.Data_Structures.Vector4"/> and a scalar <see cref="T:System.Double"/> value.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="scalar">The scalar <see cref="T:System.Double"/>.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.op_Addition(System.Double,StarSimLib.Data_Structures.Vector4)">
            <summary>
            Implements the addition operator for a <see cref="T:StarSimLib.Data_Structures.Vector4"/> and a scalar <see cref="T:System.Double"/> value.
            </summary>
            <param name="vector">The original <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</param>
            <param name="scalar">The scalar <see cref="T:System.Double"/>.</param>
            <returns>The new <see cref="T:StarSimLib.Data_Structures.Vector4"/>.</returns>
        </member>
        <member name="P:StarSimLib.Data_Structures.Vector4.Item(System.Int32)">
            <summary>
            Indexes the vector as a 1D array.
            </summary>
            <param name="i">The column index.</param>
            <returns>The value at the specified field.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.Abs">
            <summary>
            Returns the absolute value of this <see cref="T:StarSimLib.Data_Structures.Vector4"/>.
            </summary>
            <returns>The absolute value (magnitude) of this <see cref="T:StarSimLib.Data_Structures.Vector4"/>, as a <see cref="T:System.Double"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.Magnitude">
            <summary>
            Returns the magnitude of this <see cref="T:StarSimLib.Data_Structures.Vector4"/>.
            </summary>
            <returns>The magnitude (absolute value) of this <see cref="T:StarSimLib.Data_Structures.Vector4"/>, as a <see cref="T:System.Double"/>.</returns>
        </member>
        <member name="M:StarSimLib.Data_Structures.Vector4.ToString">
            <inheritdoc />
        </member>
        <member name="T:StarSimLib.Data_Structures.Vector4.UnitVectors">
            <summary>
            Holds unit vectors.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Vector4.UnitVectors.Backwards">
            <summary>
            The negative unit vector for the Z axis.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Vector4.UnitVectors.Down">
            <summary>
            The negative unit vector for the Y axis.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Vector4.UnitVectors.Forwards">
            <summary>
            The positive unit vector for the Z axis.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Vector4.UnitVectors.Left">
            <summary>
            The positive unit vector for the X axis.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Vector4.UnitVectors.Right">
            <summary>
            The negative unit vector for the X axis.
            </summary>
        </member>
        <member name="F:StarSimLib.Data_Structures.Vector4.UnitVectors.Up">
            <summary>
            The positive unit vector for the Y axis.
            </summary>
        </member>
        <member name="T:StarSimLib.Graphics.RotationDirection">
            <summary>
            Enumerates all possible rotation directions (i.e. north, east, south, west, clockwise, anticlockwise).
            Here, camera forward is north.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.RotationDirection.North">
            <summary>
            Represents an anticlockwise rotation in the x-axis.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.RotationDirection.East">
            <summary>
            Represents an anticlockwise rotation in the y-axis.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.RotationDirection.South">
            <summary>
            Represents a clockwise rotation in the x-axis.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.RotationDirection.West">
            <summary>
            Represents a clockwise rotation in the y-axis.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.RotationDirection.Clockwise">
            <summary>
            Represents a clockwise rotation in the z-axis.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.RotationDirection.Anticlockwise">
            <summary>
            Represents an anticlockwise rotation in the z-axis.
            </summary>
        </member>
        <member name="T:StarSimLib.Graphics.SimulationDrawer">
            <summary>
            Represents a drawer capable of rendering bodies to a <see cref="T:SFML.Graphics.RenderTarget"/>.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.SimulationDrawer.DegToRad">
            <summary>
            Conversion from degrees to radians, as used by the <see cref="T:System.Math"/> functions.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.SimulationDrawer.FarDistance">
            <summary>
            The furthest distance that can be seen on the <see cref="T:SFML.Graphics.RenderTarget"/>. Any bodies that are further
            from the camera than this distance are culled and not rendered.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.SimulationDrawer.FieldOfView">
            <summary>
            The default field of view for the drawer in degrees.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.SimulationDrawer.NearDistance">
            <summary>
            The closest distance that can be seen on the <see cref="T:SFML.Graphics.RenderTarget"/>. Any bodies that are closer
            to the camera than this distance (i.e. behind the camera) are culled and not rendered.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.SimulationDrawer.cameraTranslationVector">
            <summary>
            The vector by which all projected points are translated away from the camera and halfway into the view frustum.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.SimulationDrawer.aspectRatio">
            <summary>
            The aspect ratio of the render target. Allows for normalisation of the <see cref="T:SFML.Graphics.RenderTarget"/> space
            into a normal plane ([-1, -1] = top left, [1, 1] = bottom right), instead of having to deal with a
            variable render space.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.SimulationDrawer.managedBodies">
            <summary>
            Holds all the <see cref="T:StarSimLib.Data_Structures.Body"/> instances that should be simulated.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.SimulationDrawer.managedBodyShapeMap">
            <summary>
            Maps a <see cref="T:StarSimLib.Data_Structures.Body"/> to the <see cref="T:SFML.Graphics.CircleShape"/> that represents it, and is drawn to the
            screen at the <see cref="T:StarSimLib.Data_Structures.Body"/>s position.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.SimulationDrawer.managedBodyTracerVertexArrayMap">
            <summary>
            Maps a <see cref="T:StarSimLib.Data_Structures.Body"/> to the <see cref="T:SFML.Graphics.VertexArray"/> that holds its orbit tracer vertices, and
            is drawn to the screen behind the <see cref="T:StarSimLib.Data_Structures.Body"/> instance.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.SimulationDrawer.originOffset">
            <summary>
            The offset that has to be applied to the positions of a <see cref="T:SFML.Graphics.CircleShape"/>, so that they appear
            to be in the centre of the render target and not the top left corner.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.SimulationDrawer.renderTarget">
            <summary>
            The target to which the managed bodies will be drawn.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.SimulationDrawer.currentFieldOfView">
            <summary>
            The current value for the field of view, in degrees. Used to zoom the view in and out.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.SimulationDrawer.projectionMatrix">
            <summary>
            Projection matrix used for mapping from 3D to 2D.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.SimulationDrawer.rotation">
            <summary>
            The 3D rotation.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.SimulationDrawer.xRotationMatrix">
            <summary>
            The rotation matrix for the x axis.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.SimulationDrawer.yRotationMatrix">
            <summary>
            The rotation matrix for the y axis.
            </summary>
        </member>
        <member name="F:StarSimLib.Graphics.SimulationDrawer.zRotationMatrix">
            <summary>
            The rotation matrix for the z axis.
            </summary>
        </member>
        <member name="M:StarSimLib.Graphics.SimulationDrawer.#ctor(SFML.Graphics.RenderTarget,StarSimLib.Data_Structures.Body[]@,System.Collections.Generic.Dictionary{StarSimLib.Data_Structures.Body,SFML.Graphics.CircleShape}@)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Graphics.SimulationDrawer"/> class.
            </summary>
            <param name="target">The target to which the managed bodies should be rendered.</param>
            <param name="bodies">
            A reference to the <see cref="T:StarSimLib.Data_Structures.Body"/> instances which should be managed by this instance.
            </param>
            <param name="bodyShapeMap">
            A reference to the dictionary mapping a <see cref="T:StarSimLib.Data_Structures.Body"/> instance to the <see cref="T:SFML.Graphics.CircleShape"/> that
            represents it, and is drawn to the screen at the <see cref="T:StarSimLib.Data_Structures.Body"/> instance's position.
            </param>
        </member>
        <member name="P:StarSimLib.Graphics.SimulationDrawer.InverseScaleFactor">
            <summary>
            Inverse scale factor used in the projection matrix.
            </summary>
        </member>
        <member name="P:StarSimLib.Graphics.SimulationDrawer.FOV">
            <summary>
            Current field-of-view.
            </summary>
        </member>
        <member name="P:StarSimLib.Graphics.SimulationDrawer.XAngle">
            <summary>
            Current angle of rotation in the x axis.
            </summary>
        </member>
        <member name="P:StarSimLib.Graphics.SimulationDrawer.YAngle">
            <summary>
            Current angle of rotation in the x axis.
            </summary>
        </member>
        <member name="P:StarSimLib.Graphics.SimulationDrawer.ZAngle">
            <summary>
            Current angle of rotation in the x axis.
            </summary>
        </member>
        <member name="P:StarSimLib.Graphics.SimulationDrawer.ZoomLevel">
            <summary>
            Current zoom level of the drawer.
            </summary>
        </member>
        <member name="M:StarSimLib.Graphics.SimulationDrawer.LinearInterpolate(StarSimLib.Data_Structures.Vector4,StarSimLib.Data_Structures.Vector4,System.Double)">
            <summary>
            Linearly interpolates between a and b by the given percentage dt (0 = 100% a, 1 = 100% b).
            </summary>
            <param name="a">One of the starting values between which to interpolate.</param>
            <param name="b">One of the starting values between which to interpolate.</param>
            <param name="dt">The percentage by which to interpolate, capped between 0 and 1.</param>
            <returns>The interpolated value.</returns>
        </member>
        <member name="M:StarSimLib.Graphics.SimulationDrawer.ProjectPoint(StarSimLib.Data_Structures.Vector4)">
            <summary>
            Projects the given <see cref="T:StarSimLib.Data_Structures.Vector4"/> point from world space into screen space.
            </summary>
            <param name="point">The point to project.</param>
            <returns>The projected point.</returns>
        </member>
        <member name="M:StarSimLib.Graphics.SimulationDrawer.UpdateRotationMatrices">
            <summary>
            Updates the rotation matrices for the view.
            </summary>
        </member>
        <member name="M:StarSimLib.Graphics.SimulationDrawer.DrawBodies">
            <summary>
            Draws each <see cref="T:StarSimLib.Data_Structures.Body"/> instance that is managed by this drawer to the <see cref="T:SFML.Graphics.RenderTarget"/> specified
            in the constructor, using the current view settings (rotation, zoom, etc.) to project the positions from 3D to 2D.
            This method should be called every frame, as without it the view isn't updated and neither are rotation or zoom.
            </summary>
        </member>
        <member name="M:StarSimLib.Graphics.SimulationDrawer.Rotate(StarSimLib.Graphics.RotationDirection,System.Double)">
            <summary>
            Rotates the view in the given direction, by the specified angle (in degrees).
            </summary>
            <param name="direction">The direction in which to rotate the view.</param>
            <param name="angle">The angle by which to rotate in the given direction.</param>
        </member>
        <member name="M:StarSimLib.Graphics.SimulationDrawer.Scale(System.Double)">
            <summary>
            Scales this instances view by the given amount.
            </summary>
            <param name="scaleMultiplier">The multiplier by which to scale the viewport of this instances render target.</param>
        </member>
        <member name="T:StarSimLib.Models.Body">
            <summary>
            Represents a known stellar body in the database. Maps to a <see cref="T:StarSimLib.Data_Structures.Body"/> instance.
            </summary>
        </member>
        <member name="M:StarSimLib.Models.Body.#ctor(System.UInt64,System.String,System.Double)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Models.Body"/> class.
            </summary>
            <param name="id">The unique id for this instance.</param>
            <param name="name">The name for this instance.</param>
            <param name="mass">The mass for this instance.</param>
        </member>
        <member name="P:StarSimLib.Models.Body.BodyToSystemJoins">
            <summary>
            The <see cref="T:StarSimLib.Models.BodyToSystemJoin"/> entities that map this <see cref="T:StarSimLib.Models.Body"/> to the <see cref="T:StarSimLib.Models.System"/>
            entities that hold it.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.Body.Id">
            <summary>
            The unique primary key for this instance.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.Body.Mass">
            <summary>
            The mass of this instance.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.Body.Name">
            <summary>
            The displayed name of this instance.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.Body.Timestamp">
            <summary>
            A timestamp updated whenever the entity is handled by the database. Functions as a concurrency token to prevent
            multiple access to the same field.
            </summary>
        </member>
        <member name="T:StarSimLib.Models.BodyToSystemJoin">
            <summary>
            Maps a <see cref="T:StarSimLib.Models.Body"/> entity and <see cref="T:StarSimLib.Models.System"/> entity in a many-to-many relationship in the database.
            </summary>
        </member>
        <member name="M:StarSimLib.Models.BodyToSystemJoin.#ctor(System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Models.BodyToSystemJoin"/> class.
            </summary>
            <param name="id">The unique id for this instance.</param>
            <param name="bodyId">The id of the body mapped by this instance.</param>
            <param name="systemId">The id of the system mapped by this instance.</param>
        </member>
        <member name="P:StarSimLib.Models.BodyToSystemJoin.Body">
            <summary>
            The <see cref="T:StarSimLib.Models.Body"/> instance mapped by this join instance.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.BodyToSystemJoin.BodyId">
            <summary>
            The Id of the <see cref="T:StarSimLib.Models.Body"/> instance mapped by this join instance.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.BodyToSystemJoin.Id">
            <summary>
            The unique primary key for this instance.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.BodyToSystemJoin.System">
            <summary>
            The <see cref="T:StarSimLib.Models.System"/> instance mapped by this join instance.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.BodyToSystemJoin.SystemId">
            <summary>
            The Id of the <see cref="T:StarSimLib.Models.System"/> instance mapped by this join instance.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.BodyToSystemJoin.Timestamp">
            <summary>
            A timestamp updated whenever the entity is handled by the database. Functions as a concurrency token to prevent
            multiple access to the same field.
            </summary>
        </member>
        <member name="T:StarSimLib.Models.PublishedSystem">
            <summary>
            Represents a published system in the database.
            </summary>
        </member>
        <member name="M:StarSimLib.Models.PublishedSystem.#ctor(System.UInt64,System.UInt64,System.UInt64,System.DateTime)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Models.PublishedSystem"/> class.
            </summary>
            <param name="id">The unique id of this instance.</param>
            <param name="publisherId">The unique id of the publisher of this instance.</param>
            <param name="systemId">The unique id of the system that was published in this instance.</param>
            <param name="publishDate">The date this instance was published on.</param>
        </member>
        <member name="P:StarSimLib.Models.PublishedSystem.Id">
            <summary>
            The unique primary key for this instance.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.PublishedSystem.PublishDate">
            <summary>
            The date on which this instance was published.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.PublishedSystem.Publisher">
            <summary>
            The <see cref="T:StarSimLib.Models.User"/> who created this instance.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.PublishedSystem.PublisherId">
            <summary>
            The Id of the <see cref="T:StarSimLib.Models.User"/> who created this instance.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.PublishedSystem.System">
            <summary>
            The <see cref="T:StarSimLib.Models.System"/> instance that was published..
            </summary>
        </member>
        <member name="P:StarSimLib.Models.PublishedSystem.SystemId">
            <summary>
            The Id of the <see cref="T:StarSimLib.Models.System"/> instance which was published..
            </summary>
        </member>
        <member name="P:StarSimLib.Models.PublishedSystem.Timestamp">
            <summary>
            A timestamp updated whenever the entity is handled by the database. Functions as a concurrency token to prevent
            multiple access to the same field.
            </summary>
        </member>
        <member name="T:StarSimLib.Models.System">
            <summary>
            Represents a star system in the database, with a collection of child <see cref="T:StarSimLib.Models.Body"/> instances.
            </summary>
        </member>
        <member name="M:StarSimLib.Models.System.#ctor(System.UInt64,System.String,System.Collections.Generic.IReadOnlyDictionary{System.UInt64,System.ValueTuple{StarSimLib.Data_Structures.Vector4,StarSimLib.Data_Structures.Vector4}})">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Models.System"/> class.
            </summary>
            <param name="id">The unique id of this instance.</param>
            <param name="name">The name of this instance.</param>
            <param name="bodyPositionData">Optional</param>
        </member>
        <member name="P:StarSimLib.Models.System.BodyPositionData">
            <summary>
            Stores the positions and velocities of every <see cref="T:StarSimLib.Models.Body"/> entity tracked by this instance. Will be
            serialised to a JSON string and then deserialised from a JSON string to be stored and retrieved from the
            database.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.System.BodyToSystemJoins">
            <summary>
            The <see cref="T:StarSimLib.Models.BodyToSystemJoin"/> entities that map this <see cref="T:StarSimLib.Models.System"/> to the <see cref="T:StarSimLib.Models.Body"/>
            entities that it holds.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.System.Id">
            <summary>
            The unique primary key for this instance.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.System.Name">
            <summary>
            The displayed name of this instance.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.System.Timestamp">
            <summary>
            A timestamp updated whenever the entity is handled by the database. Functions as a concurrency token to prevent
            multiple access to the same field.
            </summary>
        </member>
        <member name="T:StarSimLib.Models.UserPrivileges">
            <summary>
            Enumerates the possible privileges that a <see cref="T:StarSimLib.Models.User"/> can have, as flags to save space.
            </summary>
        </member>
        <member name="F:StarSimLib.Models.UserPrivileges.Default">
            <summary>
            Represents a user with the default privileges.
            </summary>
        </member>
        <member name="F:StarSimLib.Models.UserPrivileges.Publisher">
            <summary>
            Represents a user with publishing privileges.
            </summary>
        </member>
        <member name="F:StarSimLib.Models.UserPrivileges.Admin">
            <summary>
            Represents a user with administration privileges.
            </summary>
        </member>
        <member name="F:StarSimLib.Models.UserPrivileges.ViewSimulations">
            <summary>
            Allows a user to start published or random simulations and view them.
            </summary>
        </member>
        <member name="F:StarSimLib.Models.UserPrivileges.PublishSimulations">
            <summary>
            Allows a user to publish simulations for other users to view.
            </summary>
        </member>
        <member name="F:StarSimLib.Models.UserPrivileges.ManageForeignSimulations">
            <summary>
            Allows a user to manage other user's published simulations.
            </summary>
        </member>
        <member name="F:StarSimLib.Models.UserPrivileges.ManageOwnSimulations">
            <summary>
            Allows a user to manage their own published simulations.
            </summary>
        </member>
        <member name="F:StarSimLib.Models.UserPrivileges.ViewKnownBodies">
            <summary>
            Allows a user to view known bodies.
            </summary>
        </member>
        <member name="F:StarSimLib.Models.UserPrivileges.PublishKnownBodies">
            <summary>
            Allows a user to add new known bodies for other users to view.
            </summary>
        </member>
        <member name="F:StarSimLib.Models.UserPrivileges.ManageOwnKnownBodies">
            <summary>
            Allows a user to edit their own published known bodies.
            </summary>
        </member>
        <member name="F:StarSimLib.Models.UserPrivileges.ManageForeignKnownBodies">
            <summary>
            Allows a user to edit other user's published known bodies.
            </summary>
        </member>
        <member name="F:StarSimLib.Models.UserPrivileges.ViewUsers">
            <summary>
            Allows a user to view other user's information.
            </summary>
        </member>
        <member name="F:StarSimLib.Models.UserPrivileges.ManageUsers">
            <summary>
            Allows a user to manage other user's information.
            </summary>
        </member>
        <member name="T:StarSimLib.Models.User">
            <summary>
            Represents a user in the database.
            </summary>
        </member>
        <member name="M:StarSimLib.Models.User.#ctor(System.UInt64,System.String,StarSimLib.Models.UserPrivileges,System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Models.User"/> class.
            </summary>
            <param name="id">The unique id of this instance.</param>
            <param name="username">The username of this instance.</param>
            <param name="privileges">The privileges associated with this instance.</param>
            <param name="email">The optional email of this instance.</param>
        </member>
        <member name="M:StarSimLib.Models.User.#ctor(System.UInt64,System.String,StarSimLib.Models.UserPrivileges,System.Byte[],System.Byte[],System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.Models.User"/> class.
            </summary>
            <param name="id">The unique id of this instance.</param>
            <param name="username">The username of this instance.</param>
            <param name="privileges">The privileges associated with this instance.</param>
            <param name="passwordHash">The hash of the salted password of this instance.</param>
            <param name="passwordSalt">The salt used to hash the password.</param>
            <param name="email">The optional email of this instance.</param>
        </member>
        <member name="P:StarSimLib.Models.User.Email">
            <summary>
            The email address of this instance.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.User.Id">
            <summary>
            The unique primary key for this instance.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.User.PasswordHash">
            <summary>
            The hash of this instance's salted password.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.User.PasswordSalt">
            <summary>
            The salt prepended to this instance's password prior to hashing.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.User.Privileges">
            <summary>
            The privileges associated with this instance.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.User.PublishedSystems">
            <summary>
            The <see cref="P:StarSimLib.Models.User.PublishedSystems"/> entities that this <see cref="T:StarSimLib.Models.User"/> has published.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.User.Timestamp">
            <summary>
            A timestamp updated whenever the entity is handled by the database. Functions as a concurrency token to prevent
            multiple access to the same field.
            </summary>
        </member>
        <member name="P:StarSimLib.Models.User.Username">
            <summary>
            The displayed username of this instance.
            </summary>
        </member>
        <member name="T:StarSimLib.Physics.MassToColourDelegate">
            <summary>
            Takes the mass of a <see cref="T:StarSimLib.Data_Structures.Body"/> instance and returns a colour for the <see cref="T:SFML.Graphics.CircleShape"/>
            that will represent the <see cref="T:StarSimLib.Data_Structures.Body"/> of the given mass.
            </summary>
            <returns>The colour of the <see cref="T:SFML.Graphics.CircleShape"/> for a <see cref="T:StarSimLib.Data_Structures.Body"/> of the given mass.</returns>
        </member>
        <member name="T:StarSimLib.Physics.MassToRadiusDelegate">
            <summary>
            Takes the mass of a <see cref="T:StarSimLib.Data_Structures.Body"/> instance and returns a radius for the <see cref="T:SFML.Graphics.CircleShape"/>
            that will represent the <see cref="T:StarSimLib.Data_Structures.Body"/> of the given mass.
            </summary>
            <returns>The radius of the <see cref="T:SFML.Graphics.CircleShape"/> for a <see cref="T:StarSimLib.Data_Structures.Body"/> of the given mass.</returns>
        </member>
        <member name="T:StarSimLib.Physics.BodyGenerator">
            <summary>
            Provides methods for generating <see cref="T:StarSimLib.Data_Structures.Body"/> instances.
            </summary>
        </member>
        <member name="F:StarSimLib.Physics.BodyGenerator.Rng">
            <summary>
            Caches a random number generator to use for all randomised positions and velocities.
            </summary>
        </member>
        <member name="F:StarSimLib.Physics.BodyGenerator.DefaultColourDelegate">
            <summary>
            Default implementation of the <see cref="T:StarSimLib.Physics.MassToColourDelegate"/>.
            </summary>
        </member>
        <member name="F:StarSimLib.Physics.BodyGenerator.DefaultRadiusDelegate">
            <summary>
            Default implementation of the <see cref="T:StarSimLib.Physics.MassToRadiusDelegate"/>.
            </summary>
        </member>
        <member name="P:StarSimLib.Physics.BodyGenerator.CurrentGeneration">
            <summary>
            The current generation of <see cref="T:StarSimLib.Data_Structures.Body"/> instances that the generator is on.
            </summary>
        </member>
        <member name="M:StarSimLib.Physics.BodyGenerator.GenerateBodies(System.Int32,System.Boolean)">
            <summary>
            Generates an array of <see cref="T:StarSimLib.Data_Structures.Body"/> instances, possibly including a central attractor.
            </summary>
            <param name="bodyCount">The number of <see cref="T:StarSimLib.Data_Structures.Body"/> instances to generate.</param>
            <param name="centralAttractor">Whether to have a central massive attractor.</param>
            <returns>The generated <see cref="T:StarSimLib.Data_Structures.Body"/> array.</returns>
        </member>
        <member name="M:StarSimLib.Physics.BodyGenerator.GenerateShapes(System.Collections.Generic.IEnumerable{StarSimLib.Data_Structures.Body})">
            <summary>
            Generates a <see cref="T:System.Collections.Generic.Dictionary`2"/> mapping each given <see cref="T:StarSimLib.Data_Structures.Body"/> to a
            <see cref="T:SFML.Graphics.CircleShape"/> that represents the body instance in 2D space.
            </summary>
            <param name="bodies">The <see cref="T:StarSimLib.Data_Structures.Body"/> instances for which to generate the shapes.</param>
            <returns>
            A <see cref="T:System.Collections.Generic.Dictionary`2"/> mapping the given <see cref="T:StarSimLib.Data_Structures.Body"/> instances to their <see cref="T:SFML.Graphics.CircleShape"/> instances.
            </returns>
        </member>
        <member name="M:StarSimLib.Physics.BodyGenerator.GenerateShapes(System.Collections.Generic.IEnumerable{StarSimLib.Data_Structures.Body},StarSimLib.Physics.MassToRadiusDelegate,StarSimLib.Physics.MassToColourDelegate)">
            <summary>
            Generates a <see cref="T:System.Collections.Generic.Dictionary`2"/> mapping each given <see cref="T:StarSimLib.Data_Structures.Body"/> to a
            <see cref="T:SFML.Graphics.CircleShape"/> that represents the body instance in 2D space.
            </summary>
            <param name="bodies">The <see cref="T:StarSimLib.Data_Structures.Body"/> instances for which to generate the shapes.</param>
            <param name="massToRadiusDelegate">
            The function to use to derive the radius of the <see cref="T:SFML.Graphics.CircleShape"/> that will represent a <see cref="T:StarSimLib.Data_Structures.Body"/>
            instance from its mass.
            </param>
            <param name="massToColourDelegate">
            The function to use to derive the colour of the <see cref="T:SFML.Graphics.CircleShape"/> that will represent a <see cref="T:StarSimLib.Data_Structures.Body"/>
            instance from its mass.
            </param>
            <returns>
            A <see cref="T:System.Collections.Generic.Dictionary`2"/> mapping the given <see cref="T:StarSimLib.Data_Structures.Body"/> instances to their <see cref="T:SFML.Graphics.CircleShape"/> instances.
            </returns>
        </member>
        <member name="T:StarSimLib.Physics.UpdateDelegate">
            <summary>
            Updates the given <see cref="T:StarSimLib.Data_Structures.Body"/> collections individual bodies, using the given delta time.
            </summary>
            <param name="bodies">The body collection.</param>
            <param name="deltaTime">The time step.</param>
        </member>
        <member name="T:StarSimLib.Physics.BodyUpdater">
            <summary>
            Provides methods for updating <see cref="T:StarSimLib.Data_Structures.Body"/> instance positions.
            </summary>
        </member>
        <member name="M:StarSimLib.Physics.BodyUpdater.UpdateBodiesBarnesHut(System.Collections.Generic.IEnumerable{StarSimLib.Data_Structures.Body},System.Double)">
            <summary>
            Updates the positions of all the given <see cref="T:StarSimLib.Data_Structures.Body"/>s with O(n^2) time complexity, with the given time step.
            </summary>
            <param name="bodies">The collection of <see cref="T:StarSimLib.Data_Structures.Body"/>s whose positions to update.</param>
            <param name="deltaTime">The time step.</param>
        </member>
        <member name="M:StarSimLib.Physics.BodyUpdater.UpdateBodiesBruteForce(System.Collections.Generic.IEnumerable{StarSimLib.Data_Structures.Body},System.Double)">
            <summary>
            Updates the positions of all the given <see cref="T:StarSimLib.Data_Structures.Body"/>s with O(n^2) time complexity, with the given time step.
            </summary>
            <param name="bodies">The collection of <see cref="T:StarSimLib.Data_Structures.Body"/>s whose positions to update.</param>
            <param name="deltaTime">The time step.</param>
        </member>
        <member name="T:StarSimLib.Physics.OrbitGenerator">
            <summary>
            Provides methods for initialising positions, velocities, and orbits for <see cref="T:StarSimLib.Data_Structures.Body"/> instances.
            </summary>
        </member>
        <member name="F:StarSimLib.Physics.OrbitGenerator.Rng">
            <summary>
            Random number generator.
            </summary>
        </member>
        <member name="M:StarSimLib.Physics.OrbitGenerator.RandomOrbit(StarSimLib.Data_Structures.Vector4)">
            <summary>
            Returns a randomised orbit around a central, heavy mass.
            </summary>
            <param name="positionVector">The position vector for the body for which to generate the orbit.</param>
            <returns>The magnitude of the velocity of the orbit.</returns>
        </member>
        <member name="M:StarSimLib.Physics.OrbitGenerator.RandomPosition">
            <summary>
            Returns a random position within the universe sphere (see <see cref="F:StarSimLib.Constants.UniverseSize"/>).
            </summary>
            <returns>A 3D position vector.</returns>
        </member>
        <member name="T:StarSimLib.UI.IInputHandler">
            <summary>
            Describes an input handler that allows screen interactivity.
            </summary>
        </member>
        <member name="P:StarSimLib.UI.IInputHandler.HandledScreen">
            <summary>
            The <see cref="T:StarSimLib.UI.Screen"/> instance whose input to manage.
            </summary>
        </member>
        <member name="M:StarSimLib.UI.IInputHandler.HandleKeyPressed(System.Object,SFML.Window.KeyEventArgs)">
            <summary>
            Handles key presses.
            </summary>
            <param name="sender">The <see cref="T:SFML.Window.Window"/> that sent the event.</param>
            <param name="eventArgs">The <see cref="T:SFML.Window.KeyEventArgs"/> associated with the key press.</param>
        </member>
        <member name="M:StarSimLib.UI.IInputHandler.HandleKeyReleased(System.Object,SFML.Window.KeyEventArgs)">
            <summary>
            Handles key releases.
            </summary>
            <param name="sender">The <see cref="T:SFML.Window.Window"/> that sent the event.</param>
            <param name="eventArgs">The <see cref="T:SFML.Window.KeyEventArgs"/> associated with the key release.</param>
        </member>
        <member name="M:StarSimLib.UI.IInputHandler.HandleMouseMoved(System.Object,SFML.Window.MouseMoveEventArgs)">
            <summary>
            Handles motions of the mouse.
            </summary>
            <param name="sender">The <see cref="T:SFML.Window.Window"/> that sent the event.</param>
            <param name="eventArgs">The <see cref="T:SFML.Window.MouseMoveEventArgs"/> associated with the mouse movement.</param>
        </member>
        <member name="M:StarSimLib.UI.IInputHandler.HandleMousePressed(System.Object,SFML.Window.MouseButtonEventArgs)">
            <summary>
            Handles key presses of the mouse.
            </summary>
            <param name="sender">The <see cref="T:SFML.Window.Window"/> that sent the event.</param>
            <param name="eventArgs">The <see cref="T:SFML.Window.MouseButtonEventArgs"/> associated with the mouse press.</param>
        </member>
        <member name="M:StarSimLib.UI.IInputHandler.HandleMouseReleased(System.Object,SFML.Window.MouseButtonEventArgs)">
            <summary>
            Handles key releases of the mouse.
            </summary>
            <param name="sender">The <see cref="T:SFML.Window.Window"/> that sent the event.</param>
            <param name="eventArgs">The <see cref="T:SFML.Window.MouseButtonEventArgs"/> associated with the mouse release.</param>
        </member>
        <member name="M:StarSimLib.UI.IInputHandler.HandleMouseScrolled(System.Object,SFML.Window.MouseWheelScrollEventArgs)">
            <summary>
            Handles scrolling of the mouse wheel.
            </summary>
            <param name="sender">The <see cref="T:SFML.Window.Window"/> that sent the event.</param>
            <param name="eventArgs">The <see cref="T:SFML.Window.MouseWheelScrollEventArgs"/> associated with the mouse scroll.</param>
        </member>
        <member name="M:StarSimLib.UI.IInputHandler.HandleScreenClosed(System.Object,System.EventArgs)">
            <summary>
            Handles the screen closing.
            </summary>
            <param name="sender">The <see cref="T:SFML.Window.Window"/> that sent the event.</param>
            <param name="eventArgs">The <see cref="T:System.EventArgs"/> associated with the screen close.</param>
        </member>
        <member name="T:StarSimLib.UI.Screen">
            <summary>
            Base class for screens that include user interactivity.
            </summary>
        </member>
        <member name="F:StarSimLib.UI.Screen.inputHandler">
            <summary>
            The input handler to use for this instance.
            </summary>
        </member>
        <member name="F:StarSimLib.UI.Screen.renderWindow">
            <summary>
            The window to which this instance is drawn.
            </summary>
        </member>
        <member name="M:StarSimLib.UI.Screen.#ctor(SFML.Graphics.RenderWindow,StarSimLib.UI.IInputHandler)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.UI.Screen"/> class.
            </summary>
            <param name="window"></param>
            <param name="inputHandler"></param>
        </member>
        <member name="M:StarSimLib.UI.Screen.CleanupScreen(SFML.Graphics.RenderTarget,SFML.Graphics.RenderStates)">
            <summary>
            Cleans up the contents of the screen to the given <see cref="T:SFML.Graphics.RenderTarget"/> with the given <see cref="T:SFML.Graphics.RenderStates"/>.
            </summary>
            <param name="renderTarget">The <see cref="T:SFML.Graphics.RenderTarget"/> to which to draw this instance.</param>
            <param name="renderStates">The <see cref="T:SFML.Graphics.RenderStates"/> to use for the drawing.</param>
        </member>
        <member name="M:StarSimLib.UI.Screen.ConstructScreen">
            <summary>
            Called during the constructor to allow for custom setup, before the child constructor is called.
            </summary>
        </member>
        <member name="M:StarSimLib.UI.Screen.DrawFrame(SFML.Graphics.RenderTarget,SFML.Graphics.RenderStates)">
            <summary>
            Draws the contents of the screen to the given <see cref="T:SFML.Graphics.RenderTarget"/> with the given <see cref="T:SFML.Graphics.RenderStates"/>.
            </summary>
            <param name="renderTarget">The <see cref="T:SFML.Graphics.RenderTarget"/> to which to draw this instance.</param>
            <param name="renderStates">The <see cref="T:SFML.Graphics.RenderStates"/> to use for the drawing.</param>
        </member>
        <member name="M:StarSimLib.UI.Screen.SetupScreen(SFML.Graphics.RenderTarget,SFML.Graphics.RenderStates)">
            <summary>
            Sets up the contents of the screen to the given <see cref="T:SFML.Graphics.RenderTarget"/> with the given <see cref="T:SFML.Graphics.RenderStates"/>.
            </summary>
            <param name="renderTarget">The <see cref="T:SFML.Graphics.RenderTarget"/> to which to draw this instance.</param>
            <param name="renderStates">The <see cref="T:SFML.Graphics.RenderStates"/> to use for the drawing.</param>
        </member>
        <member name="M:StarSimLib.UI.Screen.Run">
            <summary>
            Displays the screen until it is closed.
            </summary>
        </member>
        <member name="M:StarSimLib.UI.Screen.Stop">
            <summary>
            Safely closes the screen if it is open.
            </summary>
        </member>
        <member name="T:StarSimLib.UI.SimulationInputHandler">
            <summary>
            Provides user input handling functions for the simulation.
            </summary>
        </member>
        <member name="F:StarSimLib.UI.SimulationInputHandler.managedBodies">
            <summary>
            Holds all the <see cref="T:StarSimLib.Data_Structures.Body"/> instances that should be simulated.
            </summary>
        </member>
        <member name="F:StarSimLib.UI.SimulationInputHandler.simulationDrawer">
            <summary>
            The renderer used to display the <see cref="T:StarSimLib.Data_Structures.Body"/> instances on the screen.
            </summary>
        </member>
        <member name="M:StarSimLib.UI.SimulationInputHandler.#ctor(StarSimLib.Data_Structures.Body[]@)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.UI.SimulationInputHandler"/> class.
            </summary>
            <param name="bodies">
            A reference to the <see cref="T:StarSimLib.Data_Structures.Body"/> instances which should be managed by this instance.
            </param>
        </member>
        <member name="P:StarSimLib.UI.SimulationInputHandler.HandledScreen">
            <inheritdoc />
        </member>
        <member name="P:StarSimLib.UI.SimulationInputHandler.IsSimulationPaused">
            <summary>
            Whether the simulation is paused at any given time.
            </summary>
        </member>
        <member name="P:StarSimLib.UI.SimulationInputHandler.RecordOrbitTracers">
            <summary>
            Whether to record previous <see cref="T:StarSimLib.Data_Structures.Body"/> instance positions, in order to render an orbit tracer
            behind each body instance.
            </summary>
        </member>
        <member name="M:StarSimLib.UI.SimulationInputHandler.HandleKeyPressed(System.Object,SFML.Window.KeyEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:StarSimLib.UI.SimulationInputHandler.HandleKeyReleased(System.Object,SFML.Window.KeyEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:StarSimLib.UI.SimulationInputHandler.HandleMouseMoved(System.Object,SFML.Window.MouseMoveEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:StarSimLib.UI.SimulationInputHandler.HandleMousePressed(System.Object,SFML.Window.MouseButtonEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:StarSimLib.UI.SimulationInputHandler.HandleMouseReleased(System.Object,SFML.Window.MouseButtonEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:StarSimLib.UI.SimulationInputHandler.HandleMouseScrolled(System.Object,SFML.Window.MouseWheelScrollEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:StarSimLib.UI.SimulationInputHandler.HandleScreenClosed(System.Object,System.EventArgs)">
            <inheritdoc />
        </member>
        <member name="M:StarSimLib.UI.SimulationInputHandler.SetSimulationDrawer(StarSimLib.Graphics.SimulationDrawer)">
            <summary>
            Sets the simulation drawer.
            </summary>
            <param name="drawer"></param>
        </member>
        <member name="T:StarSimLib.UI.SimulationScreen">
            <summary>
            Encapsulates the simulation.
            </summary>
        </member>
        <member name="F:StarSimLib.UI.SimulationScreen.TimerRefreshIntervalMs">
            <summary>
            The interval between timer refreshes, in milliseconds.
            </summary>
        </member>
        <member name="F:StarSimLib.UI.SimulationScreen.bodies">
            <summary>
            Holds all the <see cref="T:StarSimLib.Data_Structures.Body"/> instances that should be simulated.
            </summary>
        </member>
        <member name="F:StarSimLib.UI.SimulationScreen.bodyPositionUpdater">
            <summary>
            The body position update algorithm to use.
            </summary>
        </member>
        <member name="F:StarSimLib.UI.SimulationScreen.bodyShapeMap">
            <summary>
            Maps a <see cref="T:StarSimLib.Data_Structures.Body"/> to the <see cref="T:SFML.Graphics.CircleShape"/> that represents it, and is drawn to the
            screen at the <see cref="T:StarSimLib.Data_Structures.Body"/>s position.
            </summary>
        </member>
        <member name="F:StarSimLib.UI.SimulationScreen.miscTimer">
            <summary>
            Timer that manages FPS counter and other miscellaneous counters.
            </summary>
        </member>
        <member name="F:StarSimLib.UI.SimulationScreen.simulationDrawer">
            <summary>
            The renderer used to display the <see cref="T:StarSimLib.Data_Structures.Body"/> instances on the screen.
            </summary>
        </member>
        <member name="F:StarSimLib.UI.SimulationScreen.simulationInputHandler">
            <summary>
            The input handler to use to provide interactivity to the simulator.
            </summary>
        </member>
        <member name="F:StarSimLib.UI.SimulationScreen.fps">
            <summary>
            The current amount of frames per second.
            </summary>
        </member>
        <member name="F:StarSimLib.UI.SimulationScreen.framesElapsed">
            <summary>
            Counts the frames elapsed since the last timer pulse, so that the FPS can be tracked.
            </summary>
        </member>
        <member name="M:StarSimLib.UI.SimulationScreen.#ctor(SFML.Graphics.RenderWindow,StarSimLib.UI.IInputHandler,StarSimLib.Data_Structures.Body[]@,System.Collections.Generic.Dictionary{StarSimLib.Data_Structures.Body,SFML.Graphics.CircleShape}@,StarSimLib.Physics.UpdateDelegate)">
            <summary>
            Initialises a new instance of the <see cref="T:StarSimLib.UI.SimulationScreen"/> class.
            </summary>
            <param name="renderWindow">The render window to which to display this instance.</param>
            <param name="inputHandler">The input handler for this instance.</param>
            <param name="bodies">The bodies managed by this instance.</param>
            <param name="bodyShapeMap">The shapes for the bodies managed by this instance.</param>
            <param name="bodyPositionUpdater">The body position update delegate for this instance.</param>
        </member>
        <member name="M:StarSimLib.UI.SimulationScreen.CleanupScreen(SFML.Graphics.RenderTarget,SFML.Graphics.RenderStates)">
            <inheritdoc />
        </member>
        <member name="M:StarSimLib.UI.SimulationScreen.ConstructScreen">
            <inheritdoc />
        </member>
        <member name="M:StarSimLib.UI.SimulationScreen.DrawFrame(SFML.Graphics.RenderTarget,SFML.Graphics.RenderStates)">
            <inheritdoc />
        </member>
        <member name="M:StarSimLib.UI.SimulationScreen.SetupScreen(SFML.Graphics.RenderTarget,SFML.Graphics.RenderStates)">
            <inheritdoc />
        </member>
    </members>
</doc>
